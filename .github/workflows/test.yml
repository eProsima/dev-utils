# Main CI for Dev Utils repository
# This is executed with every PullRequest (new or update), any merge in main and every night
#
# These jobs that require to install fastrtps library uses the artifact generated for the nightly job
# so they do not have to compile the whole fastrtps project. This saves huge amount of time.
#
# JOBS:
#
#   - coverage-test
#     - ubuntu-20.04
#     - Debug
#     - build code ; run tests ; calculate coverage ; upload coverage
#
#   - asan-test
#     - ubuntu-20.04
#     - Debug
#     - build code ; run tests
#
#   - tsan-test
#     - ubuntu-20.04
#     - Debug
#     - build code ; run tests
#
#   - ubuntu-test
#     - [ ubuntu-20.04 | ubuntu-22.04 ]
#     - [ Debug | Release ]
#     - build code ; run tests
#
#   - windows-test
#     - [ windows-2019 | windows-2022 ]
#     - [ Debug | Release ]
#     - build code ; run tests
#
#   - flaky-test
#     - ubuntu-20.04
#     - Debug
#     - build code ; test flaky tests
#
#   - clang-tidy
#     - ubuntu-20.04
#     - Release
#     - build code ; test clang-tidy
#
#   - uncrustify
#     - ubuntu-20.04
#     - test uncrustify
#

name: test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 1 * * *'

jobs:

###########################################################
# UBUNTU TEST
  ubuntu-test:
    runs-on: ${{ matrix.ubuntu-version }}
    strategy:
      fail-fast: false
      matrix:
        cmake-config:
          - 'Release'
          - 'Debug'
        ubuntu-version:
          - 'ubuntu-20.04'
          - 'ubuntu-22.04'

    steps:
      - name: Sync eProsima/dev-utils repository
        uses: actions/checkout@v2
        with:
          path: src/dev-utils

      - name: Get system info
        shell: bash
        run: |
          uname -m

      - name: Install apt packages
        uses: ./src/dev-utils/.github/actions/install-apt-packages

      - name: Install GTest
        uses: ./src/dev-utils/.github/actions/install-gtest-linux

      - name: Install Python packages
        uses: ./src/dev-utils/.github/actions/install-python-packages


      - name: Fetch repositories
        run: |
          vcs import src <  src/dev-utils/.github/workflows/configurations/ci.repos


      - name: Update colcon mixin
        run: |
          colcon mixin add default \
            https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml
          colcon mixin update default
        continue-on-error: true

      - name: Build workspace
        run: |
          colcon build \
            --event-handlers=console_direct+ \
            --cmake-args -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.cmake-config }}

      - name: Run tests
        run: |
          source install/setup.bash && \
          colcon test \
            --packages-select cpp_utils \
            --event-handlers=console_direct+ \
            --return-code-on-test-failure \
            --ctest-args \
              --label-exclude xfail \
              --timeout 60

      - name: Upload Logs
        uses: actions/upload-artifact@v1
        with:
          name: colcon-logs-ubuntu
          path: log/
        if: always()


###########################################################
# UBUNTU TEST
  ubuntu-test-artifact:
    runs-on: ${{ matrix.ubuntu-version }}
    strategy:
      fail-fast: false
      matrix:
        cmake-config:
          - 'Release'
          - 'Debug'
        ubuntu-version:
          - 'ubuntu-20.04'
          - 'ubuntu-22.04'

    steps:
      - name: Sync eProsima/dev-utils repository
        uses: actions/checkout@v2
        with:
          path: src/dev-utils

      - name: Get system info
        shell: bash
        run: |
          uname -m

      - name: Install apt packages
        uses: ./src/dev-utils/.github/actions/install-apt-packages

      - name: Install GTest
        uses: ./src/dev-utils/.github/actions/install-gtest-linux

      - name: Install Python packages
        uses: ./src/dev-utils/.github/actions/install-python-packages

      - name: Get build eProsima dependencies Job Id
        run: |
          export JOB_ID=$(curl -sL $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/actions/workflows/build_dependencies.yml/runs | \
            jq '.workflow_runs[] | select(.status == "completed") | .id' | \
            head -n 1)
          echo "fastdds_job_id=${JOB_ID}" >> $GITHUB_ENV

      - name: Download eProsima dependencies
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_dependencies.yml
          path: /home/runner/work/fastdds/install
          name: ${{ matrix.ubuntu-version }}_eprosima_dependencies_install
          run_id: ${{ env.fastdds_job_id }}

      - name: Update colcon mixin
        run: |
          colcon mixin add default \
            https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml
          colcon mixin update default
        continue-on-error: true

      - name: Build workspace
        run: |
          source /home/runner/work/fastdds/install/setup.bash
          colcon build \
            --event-handlers=console_direct+ \
            --cmake-args -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.cmake-config }}

      - name: Run tests
        run: |
          source install/setup.bash && \
          colcon test \
            --packages-select cpp_utils \
            --event-handlers=console_direct+ \
            --return-code-on-test-failure \
            --ctest-args \
              --label-exclude xfail \
              --timeout 60

      - name: Upload Logs
        uses: actions/upload-artifact@v1
        with:
          name: colcon-logs-ubuntu
          path: log/
        if: always()
